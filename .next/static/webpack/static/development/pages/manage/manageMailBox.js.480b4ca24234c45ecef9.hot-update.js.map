{"version":3,"file":"static/webpack/static/development/pages/manage/manageMailBox.js.480b4ca24234c45ecef9.hot-update.js","sources":["webpack:///./components/pendingConnection.js"],"sourcesContent":["import React, { Component} from 'react';\nimport {Card,Message,Button,Segment} from 'semantic-ui-react';\nimport web3 from '../ethereum/web3'\nimport mailBox from '../ethereum/mailBox';\n\nclass ShowPending extends Component {\n\n  state = {\n    approved: null,\n    message: '',\n  }\n\n  static async getInitialProps(props) {\n\n  const pendingTrustedMailboxes = this.props.pendingTrustedMailboxes;\n  const pendingTrustedPublicKeys = this.props.pendingTrustedPublicKeys;\n  const pendingTrustedConnections = this.props.pendingTrustedConnections;\n\n\n\n    return {pendingTrustedMailboxes,pendingTrustedPublicKeys,pendingTrustedConnections};\n  }\n\n  approveConnection = async (event) => {\n    event.preventDefault();\n    console.log(\"approving COnnection\");\n    try{\n      const accounts = await web3.eth.getAccounts();\n      const mailbox = mailBox(this.props.mailBoxAddress);\n      await mailbox.methods.approveConnection().send({from:accounts[0]});\n      this.setState({approved: true});\n      Router.pushRoute(`/mailBox/${this.props.mailBoxAddress}/manage`);\n    } catch (err) {\n      this.setState({errorMessage: err.message});\n      console.log(err.message);\n    }\n  }\n\n  disapproveConnection = async (event) => {\n    event.preventDefault();\n    try{\n      const accounts = await web3.eth.getAccounts();\n      const mailbox = mailBox(this.props.mailBoxAddress);\n      await mailbox.methods.disapproveConnection().send({from:accounts[0]});\n      this.setState({approved: false});\n      Router.pushRoute(`/mailBox/${this.props.mailBoxAddress}/manage`);\n    } catch (err) {\n      this.setState({errorMessage: err.message});\n      console.log(err.message);\n    }\n  }\n\n  renderPendingConnection() {\n    if(!this.props.pendingTrustedMailboxes.length){\n      return (\n        <Message content=\"No New Connections!\"/>\n      );\n    }\n    return (\n      <div>\n      <Card\n        header={`MailBox: ${this.props.pendingTrustedMailboxes}`}\n        meta={`Connection: ${this.props.pendingTrustedConnections}`}\n        description ={`Public Key: ${this.props.pendingTrustedPublicKeys}`}\n        fluid=\"true\"\n        />\n        <Button onClick={this.approveConnection}>Approve</Button>\n        <Button onClick={this.disapproveConnection}>Disapprove</Button>\n        </div>\n    );\n  }\n\n  render(){\n    return (\n      <div>\n      <Segment raised={true} color=\"orange\">\n      <h3>Pending Connection</h3>\n      {this.renderPendingConnection()}\n      </Segment>\n      </div>\n    );\n  }\n}\n\nexport default ShowPending;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAFA;AACA;;;;;;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AALA;AAAA;AAMA;AAAA;AACA;AAPA;AAOA;AAAA;AAAA;AACA;AAAA;AARA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AASA;AAAA;AAAA;AACA;AAAA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AAJA;AAAA;AAKA;AAAA;AACA;AANA;AAMA;AAAA;AAAA;AACA;AAAA;AAPA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAQA;AAAA;AAAA;AACA;AAAA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAaA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AACA;AAAA;AAGA;;;AAEA;AACA;AAEA;AAAA;AAAA;AAMA;;;;;;AArEA;;;;;;AAEA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAhBA;AACA;AA8EA;;;;A","sourceRoot":""}